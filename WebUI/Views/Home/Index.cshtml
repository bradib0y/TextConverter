@using System.Web.Script.Serialization;
@using FertilityModelNamespace;
@using WebUI.ViewModels;
@using System.Linq;
@model IndexViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Search</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>SearchParameters</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.SearchParameters.orderByFertility, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.RadioButtonFor(model => model.SearchParameters.orderByFertility, true)<p>Fertility</p>
                @Html.RadioButtonFor(model => model.SearchParameters.orderByFertility, false)<p>Iq</p>
                @Html.ValidationMessageFor(model => model.SearchParameters.orderByFertility, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SearchParameters.searchCountry, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SearchParameters.searchCountry, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SearchParameters.searchCountry, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        @Html.LabelFor(model => model.SearchParameters.searchFertilityMin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SearchParameters.searchFertilityMin, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SearchParameters.searchFertilityMin, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SearchParameters.searchFertilityMax, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SearchParameters.searchFertilityMax, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SearchParameters.searchFertilityMax, "", new { @class = "text-danger" })
        </div>
    </div>    
    <div class="form-group">
        @Html.LabelFor(model => model.SearchParameters.searchIqMin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SearchParameters.searchIqMin, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SearchParameters.searchIqMin, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SearchParameters.searchIqMax, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SearchParameters.searchIqMax, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SearchParameters.searchIqMax, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Search" class="btn btn-default" />
        </div>
    </div>
</div>
    }
    <h2>Chart</h2>
    <script>

    @{  var json = new JavaScriptSerializer().Serialize(Model); }
    const viewModel = @Html.Raw(json);

    </script>
    <canvas id="fertilityChart"></canvas>
    <canvas id="ctx"></canvas>
    <h2>Data</h2>
    <p>@json</p>
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.fertilityModels.FirstOrDefault().Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.fertilityModels.FirstOrDefault().Fertility1960)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.fertilityModels.FirstOrDefault().Fertility2016)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.fertilityModels.FirstOrDefault().Iq)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.fertilityModels)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fertility1960)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fertility2016)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Iq)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>
